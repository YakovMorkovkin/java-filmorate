CREATE TABLE IF NOT EXISTS USERS
(
    ID       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    VARCHAR(30) NOT NULL,
    LOGIN    VARCHAR(30) NOT NULL,
    NAME     VARCHAR(30),
    BIRTHDAY DATE NOT NULL,
    CONSTRAINT IF NOT EXISTS USERS_KEY_UNIQUE UNIQUE(EMAIL)
);

CREATE TABLE IF NOT EXISTS MPA
(
    ID  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME VARCHAR(20),
    CONSTRAINT IF NOT EXISTS MPA_KEY_UNIQUE UNIQUE(ID,MPA_NAME)
);

CREATE TABLE IF NOT EXISTS FILMS
(
    ID           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         VARCHAR(30) NOT NULL,
    DESCRIPTION  VARCHAR(200) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    DURATION     INT NOT NULL,
    MPA          INT,
    FOREIGN KEY (MPA) REFERENCES MPA (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT IF NOT EXISTS FILMS_KEY_UNIQUE UNIQUE(NAME,DESCRIPTION,RELEASE_DATE,DURATION,MPA)
);

CREATE TABLE IF NOT EXISTS GENRE
(
    ID    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME VARCHAR(20),
    CONSTRAINT IF NOT EXISTS GENRE_KEY_UNIQUE UNIQUE(GENRE_NAME)
);

CREATE TABLE IF NOT EXISTS FILMS_GENRE
(
    FILM_ID  INT NOT NULL,
    GENRE_ID INT NOT NULL,
    PRIMARY KEY (FILM_ID,GENRE_ID),
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (GENRE_ID) REFERENCES GENRE (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT IF NOT EXISTS FILMS_GENRE_KEY_UNIQUE UNIQUE(FILM_ID,GENRE_ID)
);

CREATE TABLE IF NOT EXISTS USER_FRIENDS
(
    USER_ID      INT,
    FRIENDS_WITH INT,
    CONFIRMATION BOOLEAN,
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (FRIENDS_WITH) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT IF NOT EXISTS USER_FRIENDS_KEY_UNIQUE UNIQUE(USER_ID,FRIENDS_WITH,CONFIRMATION)
);

CREATE TABLE IF NOT EXISTS FILM_LIKES
(
    FILM_ID  INT,
    LIKED_BY INT,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (LIKED_BY) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT IF NOT EXISTS FILM_LIKES_KEY_UNIQUE UNIQUE(FILM_ID,LIKED_BY)
);

CREATE TABLE IF NOT EXISTS REVIEWS
(
    ID           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CONTENT      VARCHAR,
    ISPOSITIVE   BOOLEAN,
    USER_ID      INTEGER NOT NULL REFERENCES USERS (ID),
    FILM_ID      INTEGER NOT NULL REFERENCES FILMS (ID),
    USEFUL       INT,
    DATEOFPUBLICATION TIMESTAMP
);

CREATE TABLE IF NOT EXISTS REVIEW_LIKES
(
    REVIEW_ID    INTEGER NOT NULL REFERENCES REVIEWS (ID),
    USER_ID      INTEGER NOT NULL REFERENCES USERS (ID),
    ISLIKE       BOOLEAN
);

